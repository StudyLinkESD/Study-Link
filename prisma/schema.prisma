// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(cuid())
  email             String              @unique
  firstname         String
  lastname          String
  profilePicture    UploadFile?         @relation(fields: [profilePictureId], references: [uuid])
  profilePictureId  String?
  emailVerified     DateTime?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  deletedAt         DateTime?
  student           Student?
  schoolOwner       SchoolOwner?
  companyOwner      CompanyOwner?
  admin             Admin?
  verificationToken VerificationToken?
}

model Student {
  id                  String            @id @default(cuid())
  user                User              @relation(fields: [userId], references: [id])
  userId              String            @unique
  school              School            @relation(fields: [schoolId], references: [id])
  schoolId            String
  recommendation      Recommendation?
  status              String
  skills              String
  apprenticeshipRythm String?
  description         String
  curriculumVitae     UploadFile?       @relation(fields: [curriculumVitaeId], references: [uuid])
  curriculumVitaeId   String?
  previousCompanies   String
  availability        Boolean
  jobRequests         JobRequest[]
  recommendations     Recommendation[]
}